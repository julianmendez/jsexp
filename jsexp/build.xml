<?xml version="1.0" encoding="UTF-8"?>
<project name="jsexp" default="dist" basedir=".">

<!--
 * Copyright 2009 Julian Mendez
 *
 *
 * This file is part of jsexp.
 *
 * jsexp is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * jsexp is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with jsexp.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
-->

	<property name="project.groupId" value="jsexp" />
	<property name="project.artifactId" value="jsexp" />

	<property file="version.properties" />

	<property name="project.build.directory" value="${basedir}/target" />
	<property name="src.directory" value="src" />

	<property name="_src.javadoc.directory" value="${src.directory}/main/javadoc" />
	<property name="project.build.sourceDirectory" value="${src.directory}/main/java" />
	<property name="project.build.testSourceDirectory" value="${src.directory}/test/java" />
	<property name="_manifest.directory" value="${src.directory}/main/manifest/MANIFEST.MF" />
	<property name="_jarlib.directory" value="lib" />
	<property name="_javadoc.directory" value="${project.build.directory}/javadoc" />
	<property name="project.build.outputDirectory" value="${project.build.directory}/classes" />
	<property name="_prjlib.directory" value="${project.build.directory}/lib" />
	<property name="_test.bin.directory" value="${project.build.directory}/test" />
	<property name="_test.report.directory" value="${project.build.directory}/report" />
	<property name="_zipfile.directory" value="${basedir}/../$[project.groupdId}-${project.artifactId}-${project.version}.${build.number}.zip" />
	<property name="_debuglevel" value="lines,vars,source" />

	<path id="libs.directory">
		<fileset dir="${_jarlib.directory}" />
	</path>

	<patternset id="testclasses.patternset">
		<include name="**/*Test.java" />
	</patternset>

	<!-- Cleans the generated documents and compiled code. -->
	<target name="clean">
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Compiles all the source code. -->
	<target name="build">
		<mkdir dir="${_jarlib.directory}" />
		<mkdir dir="${project.build.outputDirectory}" />
		<javac srcdir="${project.build.sourceDirectory}" destdir="${project.build.outputDirectory}" classpathref="libs.directory" debug="on" debuglevel="${_debuglevel}" />
		<mkdir dir="${_test.bin.directory}" />
		<javac srcdir="${project.build.testSourceDirectory}" destdir="${_test.bin.directory}" classpath="${project.build.outputDirectory}" classpathref="libs.directory" debug="on" debuglevel="${_debuglevel}" />
	</target>

	<!-- Runs the unit tests. -->
	<target name="test" depends="build">
		<mkdir dir="${_test.report.directory}" />
		<junit printsummary="on" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement path="${project.build.outputDirectory}" />
				<pathelement path="${_test.bin.directory}" />
				<fileset dir="${_jarlib.directory}" />
			</classpath>
			<formatter type="plain" usefile="on" />
			<batchtest fork="yes" todir="${_test.report.directory}">
				<fileset dir="${project.build.testSourceDirectory}">
					<patternset refid="testclasses.patternset" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- Creates the javadoc for the entire project. -->
	<target name="javadoc">
		<mkdir dir="${_javadoc.directory}" />
		<javadoc packagenames="*" sourcepath="${_src.javadoc.directory}:${project.build.sourceDirectory}" destdir="${_javadoc.directory}" version="true" use="true" windowtitle="${project.artifactId}" overview="${_src.javadoc.directory}/overview.html" classpathref="libs.directory" access="package" />
	</target>

	<!-- Creates a jar with version number. -->
	<target name="jar" depends="build">
		<mkdir dir="${_prjlib.directory}" />
		<jar destfile="${_prjlib.directory}/${project.artifactId}-${project.version}.jar" basedir="${project.build.outputDirectory}" manifest="${_manifest.directory}" />
	</target>

	<!-- Creates a zip file containing everything. -->
	<target name="zip">
		<delete file="${_zipfile.directory}" />
		<zip destfile="${_zipfile.directory}" basedir="${basedir}" />
	</target>

	<!-- Executes all the main tasks. -->
	<target name="dist" depends="clean, build, javadoc, jar, test">
		<!--buildnumber file="version.properties"/-->
	</target>

</project>


